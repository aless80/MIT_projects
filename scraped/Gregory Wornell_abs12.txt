
Unlike traditional file transfer where only total delay matters, streaming
applications impose delay constraints on each packet and require them to be in
order. To achieve fast in-order packet decoding, we have to compromise on the
throughput. We study this trade-off between throughput and in-order decoding
delay, and in particular how it is affected by the frequency of block-wise
feedback to the source. When there is immediate feedback, we can achieve the
optimal throughput and delay simultaneously. But as the feedback delay
increases, we have to compromise on at least one of these metrics. We present a
spectrum of coding schemes that span different points on the throughput-delay
trade-off. Depending upon the delay-sensitivity and bandwidth limitations of
the application, one can choose an appropriate operating point on this
trade-off.
