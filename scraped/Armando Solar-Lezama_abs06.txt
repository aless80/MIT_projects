
Syntax-Guided Synthesis (SyGuS) is the computational problem of finding an
implementation f that meets both a semantic constraint given by a logical
formula $\varphi$ in a background theory T, and a syntactic constraint given by
a grammar G, which specifies the allowed set of candidate implementations. Such
a synthesis problem can be formally defined in SyGuS-IF, a language that is
built on top of SMT-LIB.
The Syntax-Guided Synthesis Competition (SyGuS-comp) is an effort to
facilitate, bring together and accelerate research and development of efficient
solvers for SyGuS by providing a platform for evaluating different synthesis
techniques on a comprehensive set of benchmarks. In this year's competition we
added two specialized tracks: a track for conditional linear arithmetic, where
the grammar need not be specified and is implicitly assumed to be that of the
LIA logic of SMT-LIB, and a track for invariant synthesis problems, with
special constructs conforming to the structure of an invariant synthesis
problem. This paper presents and analyzes the results of SyGuS-comp'15.
