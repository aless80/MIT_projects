
all	2
heavily	1
over	2
random	1
results	2
Betweenness	1
PageRank	1
still	1
find	1
We	1
based	1
$	6
graph	4
cache	5
,	10
cache/DRAM	1
to	7
systems	2
achieve	1
Both	1
advantage	1
very	1
possible	1
While	1
fastest	1
using	1
partitions	1
easily	1
merge	1
each	1
Previous	1
smaller	1
be	1
Label	1
second	1
frequency	1
are	1
implemented	1
best	1
techniques	5
in-memory	1
combined	1
for	2
However	1
access	1
sequential	1
between	1
cache-aware	1
progress	1
boundary	2
minimal	1
\times	3
we	2
processing	1
Propagation	1
groups	1
Our	1
by	1
improve	1
on	1
Filtering	1
speedups	2
many	1
optimized	1
ineffective	1
greatly	1
merges	1
runtime	1
makes	1
or	1
first	1
large-scale	1
restrict	1
because	1
frequently	1
out-of-core	1
clustering	1
from	1
utilization	2
top	1
two	1
.	8
much	1
overhead	3
low	1
show	1
CSR	1
4	2
optimizing	1
that	3
memory/disk	1
gap	1
underutilized	1
blindly	1
DRAM	2
line	1
with	2
present	1
applied	1
made	1
applying	1
these	1
instruction	1
up	2
accesses	1
frameworks	3
2	1
can	1
of	5
accessed	1
and	4
partition	1
give	1
is	2
it	1
Centrality	1
hardware	1
substantial	1
have	2
in	1
no	2
when	1
take	1
performance	1
segmenting	1
published	1
applications	2
running	1
improving	1
such	1
The	2
a	1
Collaborative	1
Modern	1
vertices	1
together	1
the	9